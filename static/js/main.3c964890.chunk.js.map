{"version":3,"sources":["styles/style.module.css","styles/header-style.module.css","redux/actions/contactActions.js","redux/operations.js","redux/actions/filterAction.js","redux/types.js","components/Form/Form.js","components/Contacts/Contacts.js","components/Filter/Filter.js","components/App.js","redux/reduces/reducer.js","redux/store.js","redux/middleware.js","index.js"],"names":["module","exports","addContactRequest","createAction","addContactSuccess","addContactError","getContactRequest","getContactSuccess","getContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","axios","defaults","baseURL","filterContacts","connect","state","contacts","notification","addContact","contact","dispatch","post","then","data","catch","error","props","useState","name","number","setState","setNotification","handleChange","target","value","CSSTransition","in","timeout","classNames","unmountOnExit","className","style","existNotification","onSubmit","evt","preventDefault","find","elem","setTimeout","id","uuidv4","alert","form","formLabel","formInput","type","placeholder","onChange","formInput2","addButton","Contacts","onDeleteContact","contactList","key","deleteButton","onClick","Filter","marginLeft","App","filteredContacts","filter","el","toLowerCase","includes","this","getContacts","length","main","appear","headerStyle","header","noContacts","TransitionGroup","component","list","map","deleteContact","React","Component","get","delete","contactReducer","createReducer","action","payload","filterReducer","rootReducer","combineReducers","middlewares","store","next","console","log","configureStore","reducer","applyMiddleware","persistStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c964890.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"style_form__3MzRw\",\"formLabel\":\"style_formLabel__2mHgg\",\"formInput\":\"style_formInput__2PqaH\",\"formInput2\":\"style_formInput2__ZCMh9\",\"header\":\"style_header__3Nw7s\",\"main\":\"style_main__3eXBc\",\"addButton\":\"style_addButton__g4Myv\",\"deleteButton\":\"style_deleteButton__2l10_\",\"list\":\"style_list__2s_hv\",\"contactList\":\"style_contactList__13eQc\",\"noContacts\":\"style_noContacts__33LXj\",\"existNotification\":\"style_existNotification__2rE7x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"header-style_appear__3OeH9\",\"appearActive\":\"header-style_appearActive__3daEl\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const getContactRequest = createAction('contacts/getContactRequest');\r\nexport const getContactSuccess = createAction('contacts/getContactSuccess');\r\nexport const getContactError = createAction('contacts/getContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  getContactRequest,\r\n  getContactSuccess,\r\n  getContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './actions/contactActions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3000';\r\n\r\nexport const getContacts = () => dispatch => {\r\n  dispatch(getContactRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(getContactSuccess(data)))\r\n    .catch(error => dispatch(getContactError(error)));\r\n};\r\n\r\nexport const addContact = contact => dispatch => {\r\n  dispatch(addContactRequest());\r\n  axios\r\n    .post('./contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nexport const deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\nimport { FILTER_CONTACTS } from '../types';\r\n\r\nexport const filterContacts = createAction(FILTER_CONTACTS);\r\n","const ADD_CONTACT = 'contacts/ADD';\r\nconst FILTER_CONTACTS = 'contacts/FILTER';\r\nconst DELETE_CONTACT = 'contacts/DELETE';\r\nconst SWITCH_NOTIFICATION = 'notification/SWITCH';\r\n\r\nexport { ADD_CONTACT, DELETE_CONTACT, FILTER_CONTACTS, SWITCH_NOTIFICATION };\r\n","import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { connect } from 'react-redux';\nimport { addContact } from '../../redux/operations';\nimport style from '../../styles/style.module.css';\nimport { CSSTransition } from 'react-transition-group';\n\nconst Form = props => {\n  const [state, setState] = useState({ name: '', number: '' });\n  const [notification, setNotification] = useState(false);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (state.name && state.number) {\n      if (props.contacts.find(elem => elem.name === state.name)) {\n        setNotification(true);\n        setTimeout(() => {\n          setNotification(false);\n        }, 2500);\n      } else {\n        props.addContact({ id: uuidv4(), ...state });\n        setState({ name: '', number: '' });\n      }\n    } else {\n      alert('Fill all fields!');\n    }\n  };\n\n  const handleChange = ({ target: { name, value } }) => {\n    setState(state => ({ ...state, [name]: value }));\n  };\n\n  return (\n    <>\n      <CSSTransition\n        in={notification}\n        timeout={500}\n        classNames=\"notification\"\n        unmountOnExit\n      >\n        <div className={style.existNotification}>\n          This name is already exist\n        </div>\n      </CSSTransition>\n      <form onSubmit={handleSubmit} className={style.form}>\n        <label className={style.formLabel}>\n          Name\n          <input\n            className={style.formInput}\n            type=\"text\"\n            placeholder=\"Enter name\"\n            name=\"name\"\n            value={state.name}\n            onChange={handleChange}\n          />\n        </label>\n        <label className={style.formLabel}>\n          Number\n          <input\n            className={style.formInput2}\n            type=\"text\"\n            placeholder=\"Enter number\"\n            name=\"number\"\n            value={state.number}\n            onChange={handleChange}\n          />\n        </label>\n        <button type=\"submit\" className={style.addButton}>\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts,\n  notification: state.notification,\n});\n\nexport default connect(mapStateToProps, { addContact })(Form);\n","import React from 'react';\nimport style from '../../styles/style.module.css';\nimport '../../styles/contactsStyle.css';\n\nexport const Contacts = ({ contact, onDeleteContact }) => (\n  <li className={style.contactList} key={contact.id}>\n    {contact.name}: {contact.number}\n    <button\n      className={style.deleteButton}\n      id={contact.id}\n      type=\"button\"\n      onClick={() => onDeleteContact(contact.id)}\n    >\n      Delete\n    </button>\n  </li>\n);\n","import React from 'react';\n\nexport const Filter = ({ value, onChange }) => {\n  return (\n    <div>\n      <label>\n        Sort by name\n        <input\n          style={{ marginLeft: 15 }}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  );\n};\n","import React from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { deleteContact, getContacts } from '../redux/operations';\nimport { filterContacts } from '../redux/actions/filterAction';\nimport { connect } from 'react-redux';\nimport Form from './Form/Form';\nimport { Contacts } from './Contacts/Contacts';\nimport { Filter } from './Filter/Filter';\nimport headerStyle from '../styles/header-style.module.css';\nimport '../styles/filterAnimation.css';\nimport style from '../styles/style.module.css';\n\nclass App extends React.Component {\n  filteredContacts = (contacts, filter) => {\n    return filter\n      ? contacts.filter(el =>\n          el.name.toLowerCase().includes(filter.toLowerCase()),\n        )\n      : contacts;\n  };\n\n  componentDidMount() {\n    this.props.getContacts();\n  }\n\n  render() {\n    const { contacts, filter, filterContacts } = this.props;\n    contacts &&\n      setTimeout(() => {\n        contacts.length === 1 && filterContacts('');\n      }, 1500);\n    return (\n      <div className={style.main}>\n        <CSSTransition\n          in={true}\n          appear\n          timeout={500}\n          classNames={headerStyle}\n          unmountOnExit\n        >\n          <h2 className={style.header}>Phonebook</h2>\n        </CSSTransition>\n        <Form />\n        <h2 className={style.header}>Contacts</h2>\n        {contacts.length ? (\n          <CSSTransition\n            in={contacts.length > 1}\n            timeout={300}\n            classNames=\"filter\"\n            unmountOnExit\n          >\n            <Filter\n              value={filter}\n              onChange={({ target }) => filterContacts(target.value)}\n            />\n          </CSSTransition>\n        ) : (\n          <p className={style.noContacts}>No contacts yet...</p>\n        )}\n        <TransitionGroup component=\"ul\" className={style.list}>\n          {this.filteredContacts(contacts, filter).map(elem => (\n            <CSSTransition key={elem.id} timeout={250} classNames=\"form\">\n              <Contacts\n                contact={elem}\n                onDeleteContact={this.props.deleteContact}\n              />\n            </CSSTransition>\n          ))}\n        </TransitionGroup>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    contacts: state.contacts,\n    filter: state.filter,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getContacts,\n  filterContacts,\n  deleteContact,\n})(App);\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { filterContacts } from '../actions/filterAction';\r\nimport {\r\n  addContactSuccess,\r\n  getContactSuccess,\r\n  deleteContactSuccess,\r\n} from '../actions/contactActions';\r\n\r\nexport const contactReducer = createReducer([], {\r\n  [getContactSuccess]: (state, action) => [...action.payload],\r\n  [addContactSuccess]: (state, action) => [...state, action.payload],\r\n  [deleteContactSuccess]: (state, action) => [\r\n    ...state.filter(el => el.id !== action.payload),\r\n  ],\r\n});\r\n\r\nexport const filterReducer = createReducer('', {\r\n  [filterContacts]: (state, action) => action.payload,\r\n});\r\n\r\nexport const rootReducer = combineReducers({\r\n  filter: filterReducer,\r\n  contacts: contactReducer,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { persistReducer, persistStore } from 'redux-persist';\r\n// import storage from 'redux-persist/lib/storage';\r\nimport { applyMiddleware } from 'redux';\r\nimport { rootReducer } from './reduces/reducer';\r\nimport { logger } from './middleware';\r\n\r\n// const persistConfig = {\r\n//   key: 'root',\r\n//   storage,\r\n// };\r\n\r\n// const persistedReducer = persistReducer(persistConfig);\r\n\r\nconst middlewares = [logger];\r\n\r\nexport const store = configureStore(\r\n  {\r\n    reducer: rootReducer,\r\n  },\r\n  applyMiddleware(...middlewares),\r\n);\r\n\r\npersistStore(store);\r\n","export const logger = store => next => action => {\r\n  console.log('Store:', store);\r\n  console.log('Next:', next);\r\n  console.log('Action:', action);\r\n  next(action);\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport { store } from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}